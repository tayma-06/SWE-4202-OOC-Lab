6/2/2025
-Created a public parent class named GameCharacter.java
-Added the attributes mentioned using the private access modifier
-Added a public constructor
-Added public getter and setter methods
-Created 3 protagonist classes (public subclasses of the GameCharacter class):
Mage.java, Archer.java, Warrior.java
-Added constructor using super(...) in each subclass
-Created 3 antagonist classes (public subclasses of the GameCharacter class):
DarkOverlord.java, RegionalWarlord.java, CorruptedMortal.java
-Added constructor using super(...) in each subclass

6/3/2025
-Created a public main class named Main.java
-Used java.util.Scanner package
-Created an object of Scanner
-Created two objects: one for player and one for enemy from GameCharacter
-Used switch cases for taking choices from player's input
-Created another switch case for taking input choice for villain
-While formatting, learned about objectName.getClass().getSimpleName()
which returns the name of the class the object belongs to
-Created a method named startGame() to begin the combat
-Found out that we cannot access a non-static method from a static context,
so made the startGame() method static
-Added a method to display the game stats named displayStats()

6/4/2025
-Created a boolean method isAlive() in the class GameCharacter
If the health is more the 0 then the player is alive
-Created a method on GameCharacter called attack()
This method handles the mechanisms of the attack command
-In Main.java added a while loop that will handle the turns of the game
It will stop once the health of any of the two reaches 0 or less
-Added useSpecialMove() as a method in GameCharacter class
-Used Override and added useSpecialMove() method in all the subclasses
-Added java.util.Random for using random value for making automatic decision for move in enemy's turn
-Modified main a bit
-Added a static method in Main class for displaying result
-Added mechanics in the useSpecialMove() in the subclasses

6/5/2025
-Modified all the attack and special effect for the weakening effect of DarkOverlord
-Modified the special effect of RegionalWarlord so that it freezes input
will need a bit of refinements
-Modified little things within the code

6/6/2025
-Added Shield effect in the Warrior one and changed mechanics a bit
-Changed the weakening effect for DarkOverlord for only the next attack

6/8/2025
-Added Commands
-Used a method for calculating damage and made it more clean
-Refined here and there a bit
-Making the GameCharacter class into an abstract class
